<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PKLab</title>
    <link>https://pklab.ru/index.xml</link>
    <description>Recent content on PKLab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <copyright>Защитил как смог &amp;copy; &lt;a href=&#34;https://github.com/pkochubey&#34;&gt;Pavel Kochubey&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Wed, 18 Jan 2017 12:39:04 +0300</lastBuildDate>
    <atom:link href="https://pklab.ru/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Полная версия SQL запроса из плана выполнения</title>
      <link>https://pklab.ru/post/azure-sql-all-query/</link>
      <pubDate>Wed, 18 Jan 2017 12:39:04 +0300</pubDate>
      
      <guid>https://pklab.ru/post/azure-sql-all-query/</guid>
      <description>&lt;p&gt;Бывает, что запросы не помещаются в стандартный вывод SMSS или XML версию плана выполнения запроса. Для этого нужно обратиться к кэшу на прямую и взять необходимые поля, в которых уж точно будет полный запрос а не его часть.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT 
    cp.objtype AS ObjectType,
    OBJECT_NAME(st.objectid,st.dbid) AS ObjectName,
    cp.usecounts AS ExecutionCount,
    st.TEXT AS QueryText,
    qp.query_plan AS QueryPlan
FROM 
    sys.dm_exec_cached_plans AS cp
    CROSS APPLY sys.dm_exec_query_plan(cp.plan_handle) AS qp
    CROSS APPLY sys.dm_exec_sql_text(cp.plan_handle) AS st
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Блокировка в Azure SQL</title>
      <link>https://pklab.ru/post/blocking-azure-sql/</link>
      <pubDate>Sun, 15 Jan 2017 17:59:34 +0300</pubDate>
      
      <guid>https://pklab.ru/post/blocking-azure-sql/</guid>
      <description>&lt;p&gt;Херня случается, что ж поделать, вот так работает система десятилетие и тут бац половину силектов отвалилось. Когда у вас SQL Server от Azure в виде сервиса, то поддержка части DMV&amp;rsquo;s и DMF&amp;rsquo;s в GUI не реализована, да и SQL не перегрузишь для временного решения этой проблемы. Необходимо разобраться кто и кого блокирует. Но если кого, можно выяснить простым запросом и понять какие таблица золочены, то узнать кем золочено можно из этого запроса:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WITH Blockers AS
    (select DISTINCT blocking_session_id as session_id
 from sys.dm_exec_requests
 where blocking_session_id &amp;gt; 0
)
SELECT &#39;Blocker&#39; as type_desc
 , sys.dm_exec_sessions.session_id
 , sys.dm_exec_requests.start_time
 , sys.dm_exec_requests.status
 , sys.dm_exec_requests.command
 , sys.dm_exec_requests.wait_type
 , sys.dm_exec_requests.wait_time
 , sys.dm_exec_requests.blocking_session_id
 , &#39;&#39; AS stmt_text
FROM sys.dm_exec_sessions
LEFT JOIN sys.dm_exec_requests ON sys.dm_exec_requests.session_id = sys.dm_exec_sessions.session_id
INNER JOIN Blockers ON Blockers.session_id = sys.dm_exec_sessions.session_id
UNION
SELECT &#39;Victim&#39; as type_desc
 , sys.dm_exec_sessions.session_id
 , sys.dm_exec_requests.start_time
 , sys.dm_exec_requests.status
 , sys.dm_exec_requests.command
 , sys.dm_exec_requests.wait_type
 , sys.dm_exec_requests.wait_time
 , sys.dm_exec_requests.blocking_session_id
 , ST.text AS stmt_text
FROM sys.dm_exec_sessions
INNER JOIN sys.dm_exec_requests ON sys.dm_exec_requests.session_id = sys.dm_exec_sessions.session_id
CROSS APPLY SYS.DM_EXEC_SQL_TEXT(sys.dm_exec_requests.sql_handle) AS ST
WHERE blocking_session_id &amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В выводе ищем пару Blocker-Victim с одинаковым blocking_session_id, пишем KILL session_id и готово, блокировка снята. Далее разбирайтесь какой запрос вызвал блокировку и исправляйте проблему. В stmt_text можно увидеть запрос, который привел к блокировке, какой тип блокировки был наложен и какой был тип команды.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как и на чем работает этот блог</title>
      <link>https://pklab.ru/post/first-blood/</link>
      <pubDate>Sat, 14 Jan 2017 09:21:03 +0300</pubDate>
      
      <guid>https://pklab.ru/post/first-blood/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Это полностью статический сайт, опубликованный с помощью &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. Статика позволяет снизить нагрузку с сервера и хранить сие на любом самом дешёвом хостинге.&lt;/li&gt;
&lt;li&gt;На сайте включен https сертификатом от Let’s Encrypt. &lt;a href=&#34;https://gooroo.io/GoorooTHINK/Article/16420/Lets-Encrypt-Azure-Web-Apps-the-Free-and-Easy-Way/21872#.WHnMfhuLTQ4&#34;&gt;Инструкция&lt;/a&gt; по настройке для Azure Web App.&lt;/li&gt;
&lt;li&gt;Все это находится в Azure. Служба приложения S1, это на 99% больше чем нужно для данного сайта, но со временем будут работать внешние воркеры в данной службе.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Начинаем по новой</title>
      <link>https://pklab.ru/post/intro/</link>
      <pubDate>Fri, 13 Jan 2017 14:00:28 +0300</pubDate>
      
      <guid>https://pklab.ru/post/intro/</guid>
      <description>&lt;p&gt;Приветствую в шестой или уже седьмой реинкарнации блога. Сайт без рекламы, статичный с поддержкой комментариев от Disqus.&lt;/p&gt;

&lt;p&gt;Здесь будет:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Мысли в слух;&lt;/li&gt;
&lt;li&gt;IoT ловушка;&lt;/li&gt;
&lt;li&gt;Заметки про редкие виды, чего бы то не было;&lt;/li&gt;
&lt;li&gt;Много IoT, программирование МК;&lt;/li&gt;
&lt;li&gt;Книги, ссылки на полезные темы;&lt;/li&gt;
&lt;li&gt;Программирование, электроника, интернет.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>